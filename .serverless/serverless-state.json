{
  "service": {
    "service": "docker-selenium-lambda",
    "serviceObject": {
      "name": "docker-selenium-lambda"
    },
    "provider": {
      "name": "aws",
      "stage": "prod",
      "region": "us-west-1",
      "ecr": {
        "images": {
          "img": {
            "path": "./",
            "platform": "linux/amd64"
          }
        }
      },
      "apiGateway": {
        "shouldStartNameWithService": true,
        "minimumCompressionSize": 1024
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "UrloaderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/docker-selenium-lambda-prod-urloader"
            }
          },
          "UrloaderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "ImageUri": "081276445183.dkr.ecr.us-west-1.amazonaws.com/serverless-docker-selenium-lambda-prod@sha256:c0b1dec77fd712a1bf75179464f01bc2247d49859abeda1f1d0fe9451cd685e3"
              },
              "PackageType": "Image",
              "FunctionName": "docker-selenium-lambda-prod-urloader",
              "MemorySize": 2048,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "my-bucket"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "MyFunctionExecutionRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UrloaderLogGroup",
              "MyFunctionExecutionRole"
            ]
          },
          "UrloaderLambdaVersionIILQI4TRaojJIy5uzt74MngrZPkADIPrZ7Uu6aGc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UrloaderLambdaFunction"
              },
              "CodeSha256": "c0b1dec77fd712a1bf75179464f01bc2247d49859abeda1f1d0fe9451cd685e3"
            }
          },
          "MyBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": {
                "Fn::Sub": "geoimagebucket-${AWS::Region}"
              }
            }
          },
          "MyFunctionExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": {
                "Fn::Sub": "my-role-${AWS::Region}"
              },
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Path": "/",
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ],
              "Policies": [
                {
                  "PolicyName": "MyBucketAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "*"
                        ],
                        "Resource": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:aws:s3:::",
                                {
                                  "Ref": "MyBucket"
                                }
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:aws:s3:::",
                                {
                                  "Ref": "MyBucket"
                                },
                                "/*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "UrloaderAPI",
              "EndpointConfiguration": {
                "Types": [
                  "REGIONAL"
                ]
              }
            }
          },
          "ApiGatewayUrloaderResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "Urloader"
            }
          },
          "UrloaderApiGatewayMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ResourceId": {
                "Ref": "ApiGatewayUrloaderResource"
              },
              "HttpMethod": "POST",
              "AuthorizationType": "NONE",
              "Integration": {
                "Type": "AWS",
                "IntegrationHttpMethod": "POST",
                "Uri": {
                  "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UrloaderLambdaFunction.Arn}/invocations"
                },
                "PassthroughBehavior": "WHEN_NO_TEMPLATES",
                "ContentHandling": "CONVERT_TO_TEXT",
                "RequestTemplates": {
                  "application/json": "{\n  \"queryStringParameters\": {\n  \"url\": $input.json('$.url')\n  }\n}\n"
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": 200,
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type'"
                    }
                  }
                ]
              },
              "MethodResponses": [
                {
                  "StatusCode": 200,
                  "ResponseModels": {
                    "application/json": "Empty"
                  },
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type'"
                  }
                }
              ]
            }
          },
          "UrloaderLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UrloaderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/POST/Urloader"
              }
            }
          },
          "UrloaderApiGatewayDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
              "UrloaderApiGatewayMethod"
            ],
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-docker-selenium-lambda-prod-ServerlessDeploymentBucketName"
            }
          },
          "UrloaderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UrloaderLambdaVersionIILQI4TRaojJIy5uzt74MngrZPkADIPrZ7Uu6aGc"
            },
            "Export": {
              "Name": "sls-docker-selenium-lambda-prod-UrloaderLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "urloader": {
        "timeout": 30,
        "memorySize": 2048,
        "image": {
          "name": "img"
        },
        "role": "MyFunctionExecutionRole",
        "environment": {
          "BUCKET_NAME": "my-bucket"
        },
        "events": [],
        "name": "docker-selenium-lambda-prod-urloader",
        "package": {},
        "memory": 2048,
        "vpc": {},
        "versionLogicalId": "UrloaderLambdaVersionIILQI4TRaojJIy5uzt74MngrZPkADIPrZ7Uu6aGc"
      }
    },
    "resources": {
      "Resources": {
        "MyBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": {
              "Fn::Sub": "geoimagebucket-${AWS::Region}"
            }
          }
        },
        "MyFunctionExecutionRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": {
              "Fn::Sub": "my-role-${AWS::Region}"
            },
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "lambda.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Path": "/",
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "Policies": [
              {
                "PolicyName": "MyBucketAccess",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "*"
                      ],
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:s3:::",
                              {
                                "Ref": "MyBucket"
                              }
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:s3:::",
                              {
                                "Ref": "MyBucket"
                              },
                              "/*"
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "UrloaderAPI",
            "EndpointConfiguration": {
              "Types": [
                "REGIONAL"
              ]
            }
          }
        },
        "ApiGatewayUrloaderResource": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "Urloader"
          }
        },
        "UrloaderApiGatewayMethod": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ResourceId": {
              "Ref": "ApiGatewayUrloaderResource"
            },
            "HttpMethod": "POST",
            "AuthorizationType": "NONE",
            "Integration": {
              "Type": "AWS",
              "IntegrationHttpMethod": "POST",
              "Uri": {
                "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UrloaderLambdaFunction.Arn}/invocations"
              },
              "PassthroughBehavior": "WHEN_NO_TEMPLATES",
              "ContentHandling": "CONVERT_TO_TEXT",
              "RequestTemplates": {
                "application/json": "{\n  \"queryStringParameters\": {\n  \"url\": $input.json('$.url')\n  }\n}\n"
              },
              "IntegrationResponses": [
                {
                  "StatusCode": 200,
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type'"
                  }
                }
              ]
            },
            "MethodResponses": [
              {
                "StatusCode": 200,
                "ResponseModels": {
                  "application/json": "Empty"
                },
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'",
                  "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type'"
                }
              }
            ]
          }
        },
        "UrloaderLambdaPermission": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "UrloaderLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/POST/Urloader"
            }
          }
        },
        "UrloaderApiGatewayDeployment": {
          "Type": "AWS::ApiGateway::Deployment",
          "DependsOn": [
            "UrloaderApiGatewayMethod"
          ],
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "prod"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "docker-selenium-lambda",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "outputs": {
        "UrloaderApiGatewayEndpoint": {
          "Value": {
            "Fn::Sub": "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/Urloader"
          }
        },
        "BucketName": {
          "Value": {
            "Ref": "MyBucket"
          }
        }
      }
    },
    "layers": {},
    "outputs": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"outputs\"]"
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/docker-selenium-lambda/prod/1692118565066-2023-08-15T16:56:05.066Z",
    "artifact": ""
  }
}